{
    "version": "",
    "name": "MCNP",
    "scopeName": "source.mcnp",
    "patterns": [{
        "include": "#statments"
    }],
    "repository": {

		"statments": 
		{
			"patterns": 
			[
				{
					"include": "#full_line_comment"					
				},
				{
					"include": "#statement_begin"
				},
				{
					"include": "#statement_extension"
				}
            ]
		},		

		"full_line_comment": {
			"patterns": 
			[
                {					
					"name": "comment.line.double-slash.mcnp",
					"begin": "^[ ]{0,4}(c|C)",
					"end":"\n",				
					"contentName": "comment.line.mcnp"					
				}           
            ]
		},

		"statement_begin": 
		{
			"patterns": 
			[        
				{"include": "#cell_card"},
				{"include": "#surface_card"},
				{"include": "#source_data_card"},        					
				{"include": "#material_data_card"}, 
				{"include": "#generic_data_card"}
            ]
		},

		"statement_extension": 
		{
			"patterns": 
			[
                {					
					"name":"markup.italic",
					"begin": "^ {5,}",
					"end": "\n",					
					"contentName": "entity.statement.extension.mcnp",
					"patterns":
					[
						 {"include": "#inline_comment"},
						 {"include": "#argument"}
					]					
				}           
            ]
		},		

		"surface_card": {
			"patterns": 
			[
                {	
					"begin": "^ {0,4}(\\d+) (\\d+ )?([[:alpha:]]\\S+)",
					"end": "\n",							
					"contentName": "entity.line.data_card.mcnp",					
					"captures":
					{
						"1": {"name":"constant.character.mcnp"},
						"2": {"name":"entity.name.type.mcnp"},
						"3": {"name":"support.function.mcnp"}
					},
					"patterns":
					[
						 {"include": "#inline_comment"},
						 {"include": "#argument"}
					]
				}
			]
		},

		"cell_card": {
			"patterns": 
			[
                {	
					"begin": "^ {0,4}(\\d+) (0|(\\d+) +([+\\-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?))",
					"end": "\n",							
					"contentName": "entity.line.data_card.mcnp",					
					"captures":
					{
						"1": {"name":"constant.character.mcnp"},
						"2": {"name":"keyword.control.mcnp"},
						"4": {"name":"markup.italic"}
					},
					"patterns":
					[
						 {"include": "#inline_comment"},
						 {"include": "#argument"}
					]
				}
			]
		},

		"generic_data_card": {
			"patterns": 
			[
                {	
					"begin": "^ {0,4}[*+]?(?i)([[:alpha:]]\\S+)",
					"end": "\n",							
					"contentName": "entity.line.data_card.mcnp",					
					
					"patterns":
					[
						 {"include": "#inline_comment"},
						 {"include": "#argument"},
						 {"include": "#test"}
					],
					"captures":
					{
						"1": {"name":"entity.name.type.mcnp"}
					}					
				}
			]
		},

		"source_data_card": {
			"patterns": 
			[
                {	
					"begin": "^ {0,4}[*+]?(?i)(sdef|ssw|ssr|kcode|ksrc|hsrc)",
					"end": "\n",							
					"contentName": "entity.line.source.data_card.mcnp",					
					
					"patterns":
					[
						 {"include": "#inline_comment"},
						 {"include": "#argument"}
					],
					"captures":
					{
						"1": {"name":"string.quoted.single"}
					}					
				},
				{	
					"begin": "^ {0,4}[*+]?(?i)(si|sp|sb|ds|sc)(\\d+)",
					"end": "\n",							
					"contentName": "entity.line.source.data_card.mcnp",					
					
					"patterns":
					[
						 {"include": "#inline_comment"},
						 {"include": "#argument"}
					],
					"captures":
					{
						"1": {"name":"string.quoted.single"},
						"2": {"name":"string.quoted.single"}
					}					
				}
			]
		},

		"material_data_card": {
			"patterns": 
			[
                {	
					"begin": "^ {0,4}[*+]?(?i)(m|mpn|xs)(\\d+)",
					"end": "\n",							
					"contentName": "entity.line.material.data_card.mcnp",					
					
					"patterns":
					[
						 {"include": "#inline_comment"},
						 {"include": "#argument"}
					],
					"captures":
					{
						"1": {"name":"keyword.control"},
						"2": {"name":"keyword.control"}
					}					
				},
				{	
					"begin": "^ {0,4}[*+]?(?i)(drxs|totnu|nonu|awtab|void|pikmt|mgopt)",
					"end": "\n",							
					"contentName": "entity.line.material.data_card.mcnp",					
					
					"patterns":
					[
						 {"include": "#inline_comment"},
						 {"include": "#argument"}
					],
					"captures":
					{
						"1": {"name":"keyword.control"}
					}					
				}
			]
		},

		"inline_comment":
		{
			"patterns": 
			[
                {					
					"name": "comment.line.double-slash.mcnp",
					"match": "\\$(.*)",
					"contentName": "comment.inline.mcnp"								
				}          
            ]
		},
		
		"argument":
		{
			"patterns": 
			[
                {						
					"match": "\\b([[:alpha:]]+(:[[:alpha:]])?)[= ]",
					"contentName": "entity.argument.mcnp",
					"captures":
					{
						"1": {"name":"support.variable.mcnp"}
					}								
				}          
            ]
		}
	}        
}